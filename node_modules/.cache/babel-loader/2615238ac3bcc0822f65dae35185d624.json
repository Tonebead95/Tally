{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\Coding Course\\\\React\\\\tallycounter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from \"react\";\nimport Counter from './Counter';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [counters, changeCounters] = useState([{\n    count: 0,\n    counterName: \"counter0\",\n    title: \"Counter0\",\n    key: 0\n  }]);\n\n  const generateCounters = () => {\n    return counters.map(counter => {\n      return /*#__PURE__*/_jsxDEV(Counter, {\n        count: counter.count,\n        counterName: counter.counterName,\n        title: counter.title,\n        buttonHandler: () => buttonHandler(count.key),\n        resetCounter: () => resetCounter(count.key)\n      }, counter.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const addCounter = () => {\n    changeCounters(prev => [...prev, {\n      count: 0,\n      key: prev.length,\n      counterName: `counter ${prev.length}`,\n      title: `Counter ${prev.length}`\n    }]);\n  };\n\n  const removeCounter = () => {\n    changeCounters(prev => prev.slice(0, prev.length - 1));\n  };\n\n  const resetAllCounter = () => {\n    console.log(\"reset all\");\n  };\n\n  const buttonHandler = id => {\n    const updated = counters.map(value => {\n      if (value.key === id) {\n        return {\n          key: value.key,\n          title: value.title,\n          counterName,\n          count: value.count + 1\n        };\n      } else {\n        return value;\n      }\n    });\n    changeCounters(updated);\n  }; // const resetCounter = () => {\n  //   // changeCount(0);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Card.body, {\n      children: [generateCounters(), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addCounter(),\n        children: \"add counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => removeCounter(),\n        children: \"remove counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => resetAllCounter(),\n        children: \"reset all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"kfgYXF1rZXh79Z9hUb+OsVxvdVw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/antho/OneDrive/Desktop/Coding Course/React/tallycounter/src/App.js"],"names":["React","useState","Counter","Button","App","counters","changeCounters","count","counterName","title","key","generateCounters","map","counter","buttonHandler","resetCounter","addCounter","prev","length","removeCounter","slice","resetAllCounter","console","log","id","updated","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState } from \"react\";\nimport Counter from './Counter'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\n\n\nfunction App() {\n  const [counters, changeCounters] = useState([\n    { count: 0, counterName: \"counter0\", title: \"Counter0\", key: 0 }\n  ])\n\n  const generateCounters = () => {\n    return counters.map((counter) => {\n      return <Counter\n        count={counter.count}\n        counterName={counter.counterName}\n        title={counter.title} key={counter.key}\n        buttonHandler={() => buttonHandler(count.key)}\n        resetCounter={() => resetCounter(count.key)}\n      />\n    })\n  }\n\n\nconst addCounter = () => {\n  changeCounters((prev) => [...prev, {\n    count: 0,\n    key: prev.length,\n    counterName: `counter ${prev.length}`,\n    title: `Counter ${prev.length}`,\n\n  }])\n}\nconst removeCounter = () => {\n  changeCounters((prev) => prev.slice(0, prev.length - 1))\n}\nconst resetAllCounter = () => {\n  console.log(\"reset all\")\n}\n\nconst buttonHandler = (id) => {\n  const updated = counters.map(value => {\n    if (value.key === id) {\n      return { key: value.key, title: value.title, counterName, count: value.count + 1 }\n    } else {\n      return value;\n    }\n  })\n  changeCounters(updated)\n}\n// const resetCounter = () => {\n\n//   // changeCount(0);\n// }\n\n\nreturn (\n  <Card className=\"App\">\n    <Card.body>\n    {generateCounters()}\n    <Button onClick={() => addCounter()}>add counter</Button>\n    <Button onClick={() => removeCounter()}>remove counter</Button>\n    <Button onClick={() => resetAllCounter()}>reset all</Button>\n    </Card.body>\n  </Card>\n);\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}